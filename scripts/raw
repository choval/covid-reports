#!/usr/bin/env php
<?php
/**
 * Goes through files, extracts the text in them
 * and checks if they have any of the keywords.
 * If none of the keywords is found, the file
 * is marked as discarded.
 */
chdir(__DIR__ .'/..');
date_default_timezone_set('UTC');

/**
 * TODO: Add a directory listing hash to avoid running on
 * all directories on each run.
 */

$keywords = file(__DIR__.'/../keywords.txt');
foreach($keywords as $k=>$v) {
    $v = trim($v);
    if ($v) {
        $keywords[$k] = $v;
    } else {
        unset($keywords[$k]);
    }
}

$bytes_limit = 50;

$errors = 0;
$reports = glob('reports/*/*', GLOB_ONLYDIR);
foreach ($reports as $path) {
    $basename = basename($path);
    if ($basename == 'tmp') {
        continue;
    }
    $discarded = $path.'/discarded.txt';
    if (is_file($discarded)) {
        continue;
    }
    /*
    $checked = $path.'/checked.txt';
    if (is_file($checked)) {
        continue;
    }
     */

    $path_file = $path.'/file.pdf';
    $path_report = $path.'/report.json';
    if (!is_file($path_report)) {
        echo "MISSING report.json $path\n";
        $errors++;
        continue;
    }
    $report = json_decode(file_get_contents($path_report), true);
    if (isset($report['output'])) {
        $path_file = $path.'/'.$report['output'];
    }
    $path_raw = $path .'/raw.txt';
    if (is_file($path_raw)) {
        if (filesize($path_raw) > $bytes_limit) {
            continue;
        }
        $raw = file_get_contents($path_raw);
        $raw = trim($raw);
        if (strlen($raw) > $bytes_limit) {
            continue;
        }
    }
    $parts = explode('.', $path_file);
    $ext = strtolower(end($parts));
    echo "GENERATING RAW FOR $path\n";
    $lang = false;
    $lang_file = dirname($path).'/lang';
    if (is_file($lang_file)) {
        $lang = trim(file_get_contents($lang_file));
    }
    $lang_extra = '';
    if ($lang) {
        $lang_extra = ' -l '.$lang;
    }
    switch($ext) {
        case 'pdf':
            exec('pdftotext -raw "'.$path_file.'" - > "'.$path_raw.'"');
            if (filesize($path_raw) < $bytes_limit) {
                $tmp = $path.'/tmp.png';
                $out = substr( $path_raw, -4);
                exec('convert "'.$path_file.'" "'.$tmp.'"');
                $tmps = glob($path.'/tmp*.png');
                file_put_contents($path_raw, '');
                foreach ($tmps as $tmp) {
                    echo "OCR $tmp\n";
                    exec('tesseract --psm 11 '.$lang_extra.' "'.$tmp.'" -', $output);
                    file_put_contents($path_raw, $output, FILE_APPEND);
                    unlink($tmp);
                }
            }
            break;
        case 'jpg':
        case 'jpeg':
            exec('tesseract --psm 11 "'.$path_file.'" -', $output);
            file_put_contents($path_raw, $output, FILE_APPEND);
            break;
        case 'html':
            // TODO
            break;
    }
    /*
    $raw = file_get_contents($path_raw);
    $raw = trim($raw);
    if (strlen($raw) < 30) {
        file_put_contents($path_raw, "\n\n----PADDING CONTENT GENERATED BY COVID REPORTS\n", FILE_APPEND);
        continue;
    }
    */
}

if($errors) {
    exit(1);
}
